<launch>
    <arg name="model"
         default="$(env TURTLEBOT3_MODEL)"
         description="model type [burger, waffle, waffle_pi]"/>
    <arg name="initial_pose_x"
         default="-2.0"
         description="initial x position of the robot"/>
    <arg name="initial_pose_y"
         default="-0.5"
         description="initial y position of the robot"/>
    <arg name="map_conversions_implemented"
         default="True"
         description="Whether map conversions have been implemented"/>
    <arg name="use_sim_time"
         default="True"
         description="Whether to use simulation time"/>

    <!-- Map -->
    <include file="$(find-pkg-share occupancy_grid)/launch/map_server.py">
        <arg name="map_filename" value="$(find-pkg-share occupancy_grid)/maps/turtlebot3_world.yaml"/>
        <arg name="delay" value="5.0"/>
        <arg name="use_sim_time" value="$(var use_sim_time)"/>
    </include>

    <!-- Robot file -->
    <let name="urdf"
         value="$(find-pkg-share turtlebot3_description)/urdf/turtlebot3_$(env TURTLEBOT3_MODEL).urdf"/>

    <!-- Simulated Robot -->
    <include file="$(find-pkg-share turtlebot3_gazebo)/launch/turtlebot3_world.launch.py">
        <arg name="x_pose" value="$(var initial_pose_x)"/>
        <arg name="y_pose" value="$(var initial_pose_y)"/>
    </include>

    <!-- Transformations -->
    <node name="robot_state_publisher"
          pkg="robot_state_publisher"
          exec="robot_state_publisher"
          output="screen">
        <param name="publish_frequency" value="50.0" />
        <param name='robot_description' value="$(command 'xacro $(var urdf)')"/>
        <param name="use_sim_time" value="true"/>
    </node>

    <!-- Odometry -->
    <node name="turtlebot3_fake_node"
          pkg="turtlebot3_fake_node"
          exec="turtlebot3_fake_node"
          output="screen">
        <param from="$(find-pkg-share turtlebot3_fake_node)/param/$(env TURTLEBOT3_MODEL).yaml"/>
        <param name="use_sim_time" value="true"/>
    </node>

    <!-- Localization -->
    <node name="localization_fake"
          pkg="tf2_ros"
          exec="static_transform_publisher" 
          args="--x 0.0
                --y 0.0
                --frame-id /map 
                --child-frame-id /odom" >
        <param name="use_sim_time" value="true"/>
    </node>

    <!-- Global planning -->

    <!-- Local controller -->

    <!-- Collision detection -->
    <include file="$(find-pkg-share mee4411_simulation)/launch/collision_detector.py">
        <arg name="map_conversions_implemented" value="$(var map_conversions_implemented)"/>
        <arg name="use_sim_time" value="$(var use_sim_time)"/>
    </include>

    <!-- Robot visualization -->
    <node name="rviz"
          pkg="rviz2"
          exec="rviz2"
          args="-d $(find-pkg-share mee4411_simulation)/rviz/gazebo.rviz">
        <param name="use_sim_time" value="$(var use_sim_time)"/>
    </node>

</launch>
